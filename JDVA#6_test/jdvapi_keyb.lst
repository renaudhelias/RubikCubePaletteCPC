                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.6.0 #9615 (MINGW32)
                              4 ;--------------------------------------------------------
                              5 	.module jdvapi_keyb
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _aKeyboard
                             12 	.globl _get_key
                             13 	.globl _check_controller
                             14 ;--------------------------------------------------------
                             15 ; special function registers
                             16 ;--------------------------------------------------------
                             17 ;--------------------------------------------------------
                             18 ; ram data
                             19 ;--------------------------------------------------------
                             20 	.area _DATA
   0000                      21 _aKeyboard::
   0000                      22 	.ds 10
                             23 ;--------------------------------------------------------
                             24 ; ram data
                             25 ;--------------------------------------------------------
                             26 	.area _INITIALIZED
                             27 ;--------------------------------------------------------
                             28 ; absolute external ram data
                             29 ;--------------------------------------------------------
                             30 	.area _DABS (ABS)
                             31 ;--------------------------------------------------------
                             32 ; global & static initialisations
                             33 ;--------------------------------------------------------
                             34 	.area _HOME
                             35 	.area _GSINIT
                             36 	.area _GSFINAL
                             37 	.area _GSINIT
                             38 ;--------------------------------------------------------
                             39 ; Home
                             40 ;--------------------------------------------------------
                             41 	.area _HOME
                             42 	.area _HOME
                             43 ;--------------------------------------------------------
                             44 ; code
                             45 ;--------------------------------------------------------
                             46 	.area _CODE
                             47 ;jdvapi_keyb.c:8: unsigned char get_key(enum _eKey eKey)
                             48 ;	---------------------------------
                             49 ; Function get_key
                             50 ; ---------------------------------
   0000                      51 _get_key::
   0000 DD E5         [15]   52 	push	ix
   0002 DD 21 00 00   [14]   53 	ld	ix,#0
   0006 DD 39         [15]   54 	add	ix,sp
                             55 ;jdvapi_keyb.c:10: unsigned char nKeyLine = eKey / 8;
   0008 DD 4E 04      [19]   56 	ld	c,4 (ix)
   000B CB 39         [ 8]   57 	srl	c
   000D CB 39         [ 8]   58 	srl	c
   000F CB 39         [ 8]   59 	srl	c
                             60 ;jdvapi_keyb.c:11: unsigned char nBit = eKey % 8;
   0011 DD 7E 04      [19]   61 	ld	a,4 (ix)
   0014 E6 07         [ 7]   62 	and	a, #0x07
                             63 ;jdvapi_keyb.c:13: if(((unsigned char)1 << nBit & aKeyboard[nKeyLine]) == 0)
   0016 F5            [11]   64 	push	af
   0017 06 01         [ 7]   65 	ld	b,#0x01
   0019 1E 00         [ 7]   66 	ld	e,#0x00
   001B F1            [10]   67 	pop	af
   001C 3C            [ 4]   68 	inc	a
   001D 18 04         [12]   69 	jr	00110$
   001F                      70 00109$:
   001F CB 20         [ 8]   71 	sla	b
   0021 CB 13         [ 8]   72 	rl	e
   0023                      73 00110$:
   0023 3D            [ 4]   74 	dec	a
   0024 20 F9         [12]   75 	jr	NZ,00109$
   0026 3Er00         [ 7]   76 	ld	a,#<(_aKeyboard)
   0028 81            [ 4]   77 	add	a, c
   0029 6F            [ 4]   78 	ld	l, a
   002A 3Es00         [ 7]   79 	ld	a, #>(_aKeyboard)
   002C CE 00         [ 7]   80 	adc	a, #0x00
   002E 67            [ 4]   81 	ld	h, a
   002F 6E            [ 7]   82 	ld	l,(hl)
   0030 26 00         [ 7]   83 	ld	h,#0x00
   0032 7D            [ 4]   84 	ld	a,l
   0033 A0            [ 4]   85 	and	a, b
   0034 6F            [ 4]   86 	ld	l,a
   0035 7C            [ 4]   87 	ld	a,h
   0036 A3            [ 4]   88 	and	a, e
   0037 B5            [ 4]   89 	or	a,l
   0038 20 04         [12]   90 	jr	NZ,00102$
                             91 ;jdvapi_keyb.c:14: return 1;
   003A 2E 01         [ 7]   92 	ld	l,#0x01
   003C 18 02         [12]   93 	jr	00103$
   003E                      94 00102$:
                             95 ;jdvapi_keyb.c:16: return 0;
   003E 2E 00         [ 7]   96 	ld	l,#0x00
   0040                      97 00103$:
   0040 DD E1         [14]   98 	pop	ix
   0042 C9            [10]   99 	ret
                            100 ;jdvapi_keyb.c:19: void check_controller()
                            101 ;	---------------------------------
                            102 ; Function check_controller
                            103 ; ---------------------------------
   0043                     104 _check_controller::
                            105 ;jdvapi_keyb.c:49: __endasm;
   0043 F3            [ 4]  106 	di
   0044 21r00r00      [10]  107 	ld	hl, #_aKeyboard
   0047 01 82 F7      [10]  108 	ld	bc,#0xf782 ; PPI port A out /C out
   004A ED 49         [12]  109 	out	(c),c
   004C 01 0E F4      [10]  110 	ld	bc,#0xf40e ; Select Ay reg 14 on ppi port A
   004F 58            [ 4]  111 	ld	e,b
   0050 ED 49         [12]  112 	out	(c),c
   0052 01 C0 F6      [10]  113 	ld	bc,#0xf6c0 ; This value is an AY index (R14)
   0055 50            [ 4]  114 	ld	d,b
   0056 ED 49         [12]  115 	out	(c),c
   0058 0E 00         [ 7]  116 	ld	c,#0x00 ; Validate!! out (c),0
   005A ED 49         [12]  117 	out	(c),c
   005C 01 92 F7      [10]  118 	ld	bc,#0xf792 ; PPI port A in/C out
   005F ED 49         [12]  119 	out	(c),c
   0061 3E 40         [ 7]  120 	ld	a,#0x40
   0063 0E 4A         [ 7]  121 	ld	c,#0x4a
   0065                     122 	    _loop:
   0065 42            [ 4]  123 	ld	b,d
   0066 ED 79         [12]  124 	out	(c),a
   0068 43            [ 4]  125 	ld	b,e
   0069 ED A2         [16]  126 	ini
   006B 3C            [ 4]  127 	inc	a
   006C B9            [ 4]  128 	cp	c
   006D 38 F6         [12]  129 	jr	c,_loop
   006F 01 82 F7      [10]  130 	ld	bc,#0xf782 ; PPI port A out / C out
   0072 ED 49         [12]  131 	out	(c),c
   0074 FB            [ 4]  132 	ei	; 211 microseconds
   0075 C9            [10]  133 	ret
                            134 	.area _CODE
                            135 	.area _INITIALIZER
                            136 	.area _CABS (ABS)
